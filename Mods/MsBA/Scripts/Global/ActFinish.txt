// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Act Finish Object
// Script Author: Christan Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 8 : TYPE_ACTFINISH


// Static Values

// Tables

event ObjectMain
	switch object.state
	case 0
		stage.pauseEnabled = 0
		object.drawOrder = 6
		object.priority = PRIORITY_ACTIVE
		object.xpos = screen.xcenter
		object.xpos += 128
		object.ypos = screen.xcenter
		object.value1 = screen.xcenter
		FlipSign(object.value1)
		object.value1 -= 160
		object.value2 = screen.xcenter
		FlipSign(object.value2)
		object.value2 -= 160
		object.value3 = screen.xcenter
		object.value3 += 128
		object.value4 = object.value3
		object.value4 += 32
		object.scale = object.value4
		object.scale += 32
		if PlayerObject_SuperState == 1
			PlayerObject_SuperState = 2
		end if
		switch stage.minutes
		case 0
			if stage.seconds < 30
				object.value5 = 0xC350
			else
				if stage.seconds < 45
					object.value5 = 0x2710
				else
					object.value5 = 0x1388
				end if
			end if
			break
		case 1
			if stage.seconds < 30
				object.value5 = 0xFA0
			else
				object.value5 = 0xBB8
			end if
			break
		case 2
			object.value5 = 0x7D0
			break
		case 3
			object.value5 = 1000
			break
		case 4
			object.value5 = 500
			break
		case 5
			object.value5 = 100
			break
		case 9
			if stage.debugMode == 0
				if options.gameMode < 2
					if stage.seconds == 59
						object.value5 = 0x186A0
					end if
				end if
			end if
			break
		end switch
		object.value6 = object[0].value0
		object.value6 *= 100
		object.state++
		break
	case 1
		if object.xpos > 0
			object.xpos -= 16
			if object.xpos < 0
				object.xpos = 0
			end if
		end if
		if object.value1 < 0
			object.value1 += 16
			if object.value1 > 0
				object.value1 = 0
			end if
		else
			object.state++
		end if
		break
	case 2
		if object.value2 < 0
			object.value2 += 16
			if object.value2 > 0
				object.value2 = 0
			end if
		else
			object.state++
		end if
		break
	case 3
		if object.ypos > 0
			object.ypos -= 16
			if object.ypos < 0
				object.ypos = 0
			end if
		else
			object.state++
		end if
		break
	case 4
		if object.value3 > 0
			object.value3 -= 16
			if object.value3 < 0
				object.value3 = 0
			end if
		end if
		if object.value4 > 0
			object.value4 -= 16
			if object.value4 < 0
				object.value4 = 0
			end if
		end if
		if object.scale > 0
			object.scale -= 16
			if object.scale < 0
				object.scale = 0
			end if
		else
			object.state++
		end if
		break
	case 5
		object.value0++
		if options.gameMode == 2
			if object.value0 > 400
				object.value0 = 0
				object.state = 8
			end if
		else
			if object.value0 > 299
				object.value0 = 0
				object.state++
			end if
		end if
		break
	case 6
		temp2 = inputDown.buttonA
		temp2 |= inputDown.buttonB
		temp2 |= inputDown.buttonC
		if temp2 == 1
			temp3 = 2000
			if temp3 > object.value6
				temp3 = object.value6
			end if
			temp4 = 2000
			if temp4 > object.value5
				temp4 = object.value5
			end if
		else
			temp3 = 100
			temp4 = 100
		end if
		if object.value6 > 0
			object.value6 -= temp3
			player.score += temp3
		end if
		if object.value5 > 0
			object.value5 -= temp4
			player.score += temp4
		end if
		CheckGreater(object.value6, 0)
		temp0 = checkResult
		CheckGreater(object.value5, 0)
		temp0 |= checkResult
		if temp0 == 1
			object.value0++
			if object.value0 == 2
				PlaySfx(SfxName[Score Add], 0)
				object.value0 = 0
			end if
		else
			object.state++
			object.value0 = 0
			PlaySfx(SfxName[Score Total], 0)
		end if
		break
	case 7
		object.value0++
		if object.value0 == 160
			object.value0 = 0
			if options.gameMode != 2
				CheckCurrentStageFolder("Zone06")
				temp0 = checkResult
				CheckEqual(stage.actNum, 2)
				temp0 &= checkResult
				if temp0 == 1
					object.state = 9
				else
					object.state++
					if object[0].type == TypeName[Blank Object]
						PlaySfx(SfxName[Warp], 0)
					end if
				end if
			else
				object.state++
				if object[0].type == TypeName[Blank Object]
					PlaySfx(SfxName[Warp], 0)
				end if
			end if
		end if
		break
	case 8
		if object[0].type == TypeName[Blank Object]
			object.value0 += 8			
			SetScreenFade(208, 255, 224, object.value0)
			if object.value0 == 0x400
				fadeColor = 208
				fadeColor <<= 16
				temp0 = 255
				temp0 <<= 8
				fadeColor += temp0
				fadeColor += 224
				object.direction = FLIP_NONE
				object.value0 = 0
				lampPostID = 0
				stage.listPos++
				if options.gameMode == 1
					arrayPos1 = options.saveSlot
					arrayPos1 <<= 3
					arrayPos1 += 1000
					if stage.player2Enabled == 1
						switch stage.playerListPos
							case 0
								saveRAM[arrayPos1] = 3
								break
							case 2
								saveRAM[arrayPos1] = 4
								break
						end switch
					else
						saveRAM[arrayPos1] = stage.playerListPos
					end if
					arrayPos1++
					saveRAM[arrayPos1] = player.lives
					arrayPos1++
					saveRAM[arrayPos1] = player.score
					arrayPos1++
					saveRAM[arrayPos1] = player.scoreBonus
					arrayPos1++
					temp0 = stage.listPos
					temp0++
					if temp0 > saveRAM[arrayPos1]
						saveRAM[arrayPos1] = temp0
						saveRAM[arrayPos1] += 128
					end if
					arrayPos1++
					saveRAM[arrayPos1] = specialStage.emeralds
					arrayPos1++
					saveRAM[arrayPos1] = specialStage.listPos
				end if
				specialStage.nextZone = stage.listPos
				stage.listPos = specialStage.listPos
				stage.activeList = SPECIAL_STAGE
				temp0 = engine.trialMode
				if stage.listPos >= stage.listSize
					temp0 = 1
				end if
				if temp0 == 0
					WriteSaveRAM()
					LoadStage()
				else
					stage.activeList = PRESENTATION_STAGE
					stage.listPos = 0
					WriteSaveRAM()
					LoadStage()
				end if
			end if
		else
			object.value0 += 4
			SetScreenFade(0, 0, 0, object.value0)
			if object.value0 == 384
				fadeColor = 0
				object.value0 = 0
				lampPostID = 0
				object.direction = FLIP_NONE
				stage.listPos++
				if options.gameMode == 1
					arrayPos1 = options.saveSlot
					arrayPos1 <<= 3
					arrayPos1 += 1000
					if stage.player2Enabled == 1
						switch stage.playerListPos
							case 0
								saveRAM[arrayPos1] = 3
								break
							case 2
								saveRAM[arrayPos1] = 4
								break
						end switch
					else
						saveRAM[arrayPos1] = stage.playerListPos
					end if
					arrayPos1++
					saveRAM[arrayPos1] = player.lives
					arrayPos1++
					saveRAM[arrayPos1] = player.score
					arrayPos1++
					saveRAM[arrayPos1] = player.scoreBonus
					arrayPos1++
					temp0 = stage.listPos
					temp0++
					if temp0 > saveRAM[arrayPos1]
						saveRAM[arrayPos1] = temp0
					end if
					arrayPos1++
					saveRAM[arrayPos1] = specialStage.emeralds
					arrayPos1++
					saveRAM[arrayPos1] = specialStage.listPos
				end if
				if options.gameMode == 2
					if stage.activeList == BONUS_STAGE
						stage.listPos = 6
						recGoggles = 102
					else
						stage.listPos = 8
					end if
					stage.activeList = PRESENTATION_STAGE
					
					LoadStage()
					//CallNativeFunction2(SetLeaderboard, stage.listPos, timeAttack.result)
					//engine.state = 8
				else
					temp0 = engine.trialMode
					if stage.listPos >= stage.listSize
						temp0 = 1
					end if
					if temp0 == 0
						LoadStage()
					else
						stage.activeList = PRESENTATION_STAGE
						stage.listPos = 0
						LoadStage()
					end if
				end if
				WriteSaveRAM()
			end if
		end if
		break
	case 9
		object.xpos += 32
		object.ypos += 32
		object.value1 -= 32
		object.value0++
		if object.value0 == 8
			object.value0 = 0
			object.state++
		end if
		break
	case 10
		object.xpos += 32
		object.ypos += 32
		object.value1 -= 32
		object.value2 -= 32
		object.value0++
		if object.value0 == 8
			object.value0 = 0
			object.state++
		end if
		break
	case 11
		object.xpos += 32
		object.ypos += 32
		object.value1 -= 32
		object.value2 -= 32
		object.value3 += 32
		if object.value3 > 96
			object.value4 += 32
			if object.value4 > 96
				object.scale += 32
			end if
		end if
		object.value0++
		if object.value0 == 35
			object.value0 = 0
			temp0 = tileLayer[0].xsize
			temp0 <<= 7
			stage.newXBoundary2 = temp0
			foreach (TypeName[Sign Post], arrayPos0, ACTIVE_ENTITIES)
				object[arrayPos0].state = 5
			next
			currentPlayer = 0
			while currentPlayer < playerCount
				object[currentPlayer].interaction = 1
				object[currentPlayer].controlMode = 0
				object[currentPlayer].right = 1
				currentPlayer++
			loop
			ResetObjectEntity(object.entityPos, TypeName[Blank Object], 0, 0, 0)
			SetMusicTrack("Final.ogg", 0, 0x14AC8)
			PlayMusic(0)
		end if
		break
	end switch
end event


event ObjectDraw
	SetActivePalette(0, 0, screen.ysize)
	temp0 = screen.xcenter
	temp0 += 16
	temp0 += object.xpos
	DrawSpriteScreenXY(1, temp0, 56)
	temp0 = screen.xcenter
	temp0 += 3
	temp0 += object.value1
	switch stage.playerListPos
		case 0
			// Mighty
			temp0 -= 76
			DrawSpriteScreenXY(36, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(32, temp0, 60)
			temp0 += 8
			DrawSpriteScreenXY(30, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(31, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(43, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(48, temp0, 60)
			break
		case 1
			// Ray
			temp0 -= 64
			DrawSpriteScreenXY(41, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(24, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(48, temp0, 60)
			break
		case 2
			// Knuckles
			temp0 -= 96
			DrawSpriteScreenXY(34, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(37, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(44, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(26, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(34, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(35, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(28, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(42, temp0, 60)
			break
		case 5
			// Sonic
			temp0 -= 72
			DrawSpriteScreenXY(42, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(38, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(37, temp0, 60)
			temp0 += 16
			DrawSpriteScreenXY(32, temp0, 60)
			temp0 += 8
			DrawSpriteScreenXY(26, temp0, 60)
			break
	end switch
	temp0 += 32
	// Got
	DrawSpriteScreenXY(30, temp0, 60) // G
	temp0 += 16
	DrawSpriteScreenXY(38, temp0, 60) // O
	temp0 += 16
	DrawSpriteScreenXY(43, temp0, 60) // T
	temp0 = screen.xcenter
	temp0 -= 56
	temp0 += object.value2
	// Through
	DrawSpriteScreenXY(43, temp0, 80) // T
	temp0 += 16
	DrawSpriteScreenXY(31, temp0, 80) // H
	temp0 += 16
	DrawSpriteScreenXY(41, temp0, 80) // R
	temp0 += 16
	DrawSpriteScreenXY(38, temp0, 80) // O
	temp0 += 16
	DrawSpriteScreenXY(44, temp0, 80) // U
	temp0 += 16
	DrawSpriteScreenXY(30, temp0, 80) // G
	temp0 += 16
	DrawSpriteScreenXY(31, temp0, 80) // H
	temp0 = screen.xcenter
	temp0 += 24
	temp0 += object.ypos
	if stage.actNum == 5
		temp1 = 27
	else
		temp1 = stage.actNum
		temp1 += 1
		if temp1 < 2
			temp1 = 2
		end if
		if temp1 > 4
			temp1 = 4
		end if
		if temp1 != 0
			temp2 = 80
		else
			temp2 = 82
		end if
		if temp1 == 0
			temp1 = 50
			temp0 += 16
		end if
	end if
	DrawSpriteScreenXY(temp1, temp0, temp2)
	temp0 = screen.xcenter
	temp0 -= 79
	temp0 += object.value3
	if options.gameMode == 2
		temp1 = temp0
		temp1 += 24
		DrawSpriteScreenXY(26, temp1, 117)
		DrawSpriteScreenXY(10, temp0, 117)
		temp0 += 114
		
		temp1 = stage.minutes
		while temp1 >= 10
			temp0 += 8
			temp1 /= 10
		loop
		
		DrawSpriteScreenXY(25, temp0, 117)
			temp0 += 37
		DrawNumbers(9, temp0, 117, stage.milliSeconds, 2, 8, 1)
		temp0 -= 24
		DrawNumbers(9, temp0, 117, stage.seconds, 2, 8, 1)
		temp5 = temp0
		temp0 -= 24
		DrawNumbers(9, temp0, 117, stage.minutes, 10, 8, 0)
	else
		DrawSpriteScreenXY(9, temp0, 117)
		temp0 += 151
		DrawNumbers(9, temp0, 117, player.score, 6, 8, 0)
	end if
	temp0 = screen.xcenter
	temp0 -= 79
	temp0 += object.value4
	if options.gameMode == 2
		temp1 = temp0
		temp1 += 63
		DrawSpriteScreenXY(26, temp1, 133)
		DrawSpriteScreenXY(23, temp0, 133)
		temp0 += 114
		if object[9].value5 > 9
			temp0 += 8
		end if
		DrawSpriteScreenXY(25, temp0, 133)
			temp0 += 37
		DrawNumbers(9, temp0, 133, object[9].value3, 2, 8, 1)
		temp0 -= 24
		DrawNumbers(9, temp0, 133, object[9].value4, 2, 8, 1)
		temp5 = temp0
		temp0 -= 24
		DrawNumbers(9, temp0, 133, object[9].value5, 2, 8, 0)
	else
		DrawSpriteScreenXY(10, temp0, 133)
		DrawSpriteScreenXY(12, temp0, 133)
		temp0 += 151
		DrawNumbers(9, temp0, 133, object.value5, 6, 8, 0)
	end if
	temp0 = screen.xcenter
	temp0 -= 79
	temp0 += object.scale
	if options.gameMode == 2
		if object[9].value2 > timeAttack.result
			temp0 += 37
			temp1 = temp0
			temp1 += 76
			DrawSpriteScreenXY(26, temp1, 149)
			DrawSpriteScreenXY(24, temp0, 149)
		end if
	else
		DrawSpriteScreenXY(11, temp0, 149)
		DrawSpriteScreenXY(12, temp0, 149)
		temp0 += 151
		DrawNumbers(9, temp0, 149, object.value6, 5, 8, 0)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Global/S2TitleCard.gif")
	SpriteFrame(0, 0, 0, 0, 0, 0,) // Blank frame because I might be stupid
	SpriteFrame(20, 0, 64, 64, 147, 1) //1 Blue Egg
	SpriteFrame(16, -8, 48, 48, 1, 130) //2 Act 1
	SpriteFrame(16, -8, 48, 48, 50, 130) //3 Act 2
	SpriteFrame(16, -8, 48, 48, 99, 130) //4 Act 3
	SpriteFrame(0, -2, 44, 16, 98, 26) //5 Score
	SpriteFrame(0, 0, 31, 11, 1, 17) //6 Time
	SpriteFrame(0, 0, 31, 11, 1, 33) //7 Ring
	SpriteFrame(40, -2, 45, 16, 98, 43) //8 Bonus
	
	//Numbers

	SpriteFrame(0, 0, 8, 11, 1, 50) // 9 0
	SpriteFrame(0, 0, 8, 11, 10, 50) //10 1
	SpriteFrame(0, 0, 8, 11, 19, 50) //11 2
	SpriteFrame(0, 0, 8, 11, 28, 50) //12 3
	SpriteFrame(0, 0, 8, 11, 1, 62) //13 4
	SpriteFrame(0, 0, 8, 11, 10, 62) //14 5
	SpriteFrame(0, 0, 8, 11, 19, 62) //15 6
	SpriteFrame(0, 0, 8, 11, 28, 62) //16 7
	SpriteFrame(0, 0, 8, 11, 1, 74) //17 8
	SpriteFrame(0, 0, 8, 11, 10, 74) //18 9
		
	SpriteFrame(0, 0, 70, 11, 46, 192) //19 Best Time
	SpriteFrame(0, 0, 83, 11, 118, 192) //20 New Record
	SpriteFrame(0, 0, 29, 4, 1, 45) //21 Time Marker
	SpriteFrame(-4, -2, 16, 16, 182, 175) //22 Results Oval
	
	SpriteFrame(0, 16, 32, 8, 174, 64) //23 Act 1

	SpriteFrame(0, 0, 15, 16, 37, 79) // A 24
	SpriteFrame(0, 0, 16, 16, 53, 79) // B 25
	SpriteFrame(0, 0, 16, 16, 70, 79) // C 26
	SpriteFrame(0, 0, 16, 16, 87, 79) // D 27
	SpriteFrame(0, 0, 15, 16, 104, 79) // E 28
	SpriteFrame(0, 0, 15, 16, 120, 79) // F 29
	SpriteFrame(0, 0, 16, 16, 136, 79) // G 30
	SpriteFrame(0, 0, 16, 16, 153, 79) // H 31
	SpriteFrame(0, 0, 8, 16, 170, 79) // I 32
	SpriteFrame(0, 0, 16, 16, 179, 79) // J 33
	SpriteFrame(0, 0, 16, 16, 196, 79) // K 34
	SpriteFrame(0, 0, 16, 16, 213, 79) // L 35
	SpriteFrame(0, 0, 16, 16, 43, 96) // M 36
	SpriteFrame(0, 0, 16, 16, 67, 96) // N 37
	SpriteFrame(0, 0, 16, 16, 84, 96) // O 38
	SpriteFrame(0, 0, 16, 16, 101, 96) // P 39
	SpriteFrame(0, 0, 16, 16, 118, 96) // Q 40
	SpriteFrame(0, 0, 16, 16, 135, 96) // R 41
	SpriteFrame(0, 0, 16, 16, 152, 96) // S 42
	SpriteFrame(0, 0, 16, 16, 169, 96) // T 43
	SpriteFrame(0, 0, 16, 16, 186, 96) // U 44
	SpriteFrame(0, 0, 16, 16, 203, 96) // V 45
	SpriteFrame(0, 0, 16, 16, 220, 96) // W 46
	SpriteFrame(0, 0, 15, 16, 43, 113) // X 47
	SpriteFrame(0, 0, 16, 16, 59, 113) // Y 48
	SpriteFrame(0, 0, 16, 16, 76, 113) // Z 49
	
	SpriteFrame(64, 0, 64, 16, 83, 1) // Zone 50
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
